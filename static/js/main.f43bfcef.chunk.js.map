{"version":3,"sources":["database/constant.js","component/Roulette/RouletteResultComponent.js","component/Roulette/RouletteComponent.js","component/CheckBoxComponent.js","component/TrackPopup/TrackThemeItemComponent.js","component/TrackPopup/TrackItemComponent.js","component/TrackPopup/TrackContainerComponent.js","component/TrackPopup/TrackThemeCheckboxComponent.js","component/TrackPopup/TrackPopupHeaderComponent.js","component/TrackPopup/TrackPopupFooterComponent.js","database/IndexedDbManager.js","component/TrackPopup/TrackPopupComponent.js","redux/action.js","redux/actionType.js","component/Collection/CollectionItemComponent.js","component/Collection/CollectionDetailItemComponent.js","component/Collection/CollectionTableComponent.js","component/Collection/CollectionComponent.js","component/DataSourceDescripitonComponent.js","component/FooterComponent.js","App.js","serviceWorker.js","redux/reducer.js","redux/store.js","index.js"],"names":["defaultTrackType","RouletteResultComponent","props","state","styleTransform","container","transform","displayName","zero","one","two","pixelAccumulated","cursor","baseTranslation","lastAnimationRequest","shouldStop","shouldPrepareStop","cubicBezierCurve","getCubicBezierCurve","startTime","rouletteResult","isAnimationOn","onPlayRoulette","bind","onAnimationToggle","value","localStorage","getItem","JSON","parse","this","setState","error","key","setItem","array","shuffledArray","i","length","j","Math","floor","random","temp","p1","p2","p3","p4","x1","y1","x2","y2","x3","y3","x4","y4","t","fun","pow","updateLocalStorage","stringify","rouletteSet","trackList","Object","keys","shuffledTrackList","shuffleFisherYates","Date","setTimeout","requestAnimationFrame","animationCallback","iteration","pixel","abs","elapsedTime","min","y","scale","max","nextPixelAccumulated","nextStyleTransform","getStyleTransform","stateToUpdate","_displayName","className","style","onClick","disabled","Component","connect","RouletteComponent","CheckBoxComponent","isChecked","defaultTheme","TrackThemeItemComponent","onSelectTheme","theme","isSelected","src","alt","TrackItemComponent","dotArray","track","onSelectTrack","map","TrackContainerComponent","containerRef","React","createRef","scrollToRef","current","scrollTo","themeList","selectedTheme","selectedTrackList","collectionTrackSet","ref","has","TrackThemeCheckboxComponent","onChange","name","type","checked","TrackPopupHeaderComponent","onClose","onCheck","trackType","trackTypeCheckbox","placeholder","TrackPopupFooterComponent","onSubmit","isSubmit","tabIndex","idbManagerInstance","db","open","Promise","resolve","reject","request","indexedDB","onerror","event","console","log","onsuccess","target","result","onupgradeneeded","objectStore","createObjectStore","keyPath","autoIncrement","createIndex","unique","transaction","oncomplete","trackObjectStore","trackData","forEach","add","objectStoreCollection","collectionDefaultData","collection","themeObjectStore","themeData","tryOpen","getAll","resultArray","get","push","onabort","themeKey","index","openCursor","IDBKeyRange","only","continue","_","time","substring","currentDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","newCollection","formatTwoDigit","toISOString","put","delete","TrackPopupComponent","Set","speed","item","all","collectionName","divFocus","onInputValueChange","onKeyDownTest","emptyValue","action","diff","payload","getDiffCollection","popupRoot","document","getElementById","ReactDOM","unmountComponentAtNode","size","filter","close","nextCollectionTrackSet","trackListToAdd","trackListToAddSet","currentTrackList","IndexedDbManager","getTrackByTheme","sort","a","b","getTrackList","trackName","getAllThemeList","focus","keyCode","onKeyDown","component","createElement","render","addRouletteSet","deleteRouletteSet","CollectionItemComponent","onEditItem","onDeleteItem","onDetail","onSelectCollection","syncCollection","body","overflowY","updatedCollection","dispatch","updateCollection","onDelete","CollectionDetailItemComponent","onBack","getTrackLength","collectionId","values","reduce","acc","getDetailTitle","tracks","defaultProps","CollectionTableComponent","searchText","isTableHidden","isAllChecked","collectionObject","collectionCheckedObject","selectedCollection","onCreateCollection","onDeleteCollection","onDeleteTrack","getAllColection","nextCollectionCheckedObject","checkedCollectionObject","id","checkedArray","collectionArray","every","bool","updateRouletteSet","collectionList","deleteCollection","oldTrackList","newTrackList","syncSelectedCollection","selectedCollectionId","object","getRouletteSetAsCollectionFormat","createCollection","collectionTrackList","trackSet","CollectionComponent","DataSourceDescriptionComponent","FooterComponent","onClickId","onClickRepo","window","App","Boolean","location","hostname","match","combineReducers","newState","createStore","rootReducer","store","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f43bfcef.chunk.js","sourcesContent":["export const defaultTrackType = {\n  '스피드': 'speed',\n  '아이템': 'item',\n  '전체': 'all',\n};\n\nexport const defaultScheme = {\n  'd': 'd',\n};\n\nexport const UPDATE_COLLECTION = 'UPDATE_COLLECTION';\nexport const ROULETTE_RESULT_PLACEHOLDER = '룰렛을 돌려주세요!';\nexport const ROULETTE_RESULT_GUIDE = '룰렛을 돌릴 컬렉션이 없습니다. 컬렉션을 체크해주세요!'\nexport const ROULETTE_HEIGHT = 30;\nexport const ROULETTE_ANIMATION_DURATION = 3000;\nexport const ROULETTE_SCALE = 20;\nexport const LOCAL_STORAGE_COLLECTION_KEY = 'check';\nexport const LOCAL_STORAGE_ANIMATION_KEY = 'animation';\nexport const IMAGE_URL = 'asset';\nexport const ROULETTE_COLLECTION_ID = 'rouletteSet';","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport {\n  ROULETTE_HEIGHT,\n  ROULETTE_ANIMATION_DURATION,\n  ROULETTE_RESULT_PLACEHOLDER,\n  ROULETTE_RESULT_GUIDE,\n  ROULETTE_SCALE,\n  LOCAL_STORAGE_ANIMATION_KEY,\n} from '../../database/constant';\n\nclass RouletteResultComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      styleTransform: {\n        container: {\n          transform: `translateY(${ -ROULETTE_HEIGHT }px)`,\n        },\n      },\n      displayName: {\n        zero: ROULETTE_RESULT_PLACEHOLDER,\n        one: ROULETTE_RESULT_PLACEHOLDER,\n        two: ROULETTE_RESULT_PLACEHOLDER\n      },\n      pixelAccumulated: 0,\n      cursor: 0,\n      baseTranslation: -ROULETTE_HEIGHT,\n      lastAnimationRequest: null,\n      shouldStop: false,\n      shouldPrepareStop: false,\n      cubicBezierCurve: this.getCubicBezierCurve(\n        // ease\n        [0,0],\n        [0.25, 0.1],\n        [0.25, 1.0],\n        [1.0, 1.0]\n      ),\n      startTime: null,\n      rouletteResult: null,\n      isAnimationOn: true,\n    };\n\n    this.onPlayRoulette = this.onPlayRoulette.bind(this);\n    this.onAnimationToggle = this.onAnimationToggle.bind(this);\n  }\n\n  componentDidMount() {\n    const value = localStorage.getItem(LOCAL_STORAGE_ANIMATION_KEY);\n    if (value) {\n      try {\n        const { isAnimationOn } = JSON.parse(value);\n\n        this.setState({\n          isAnimationOn\n        });\n      } catch (error) {\n        // error occurred!\n      }\n    }\n  }\n\n  updateLocalStorage(key, value) {\n    localStorage.setItem(key, value);\n  }\n\n  shuffleFisherYates(array) {\n    const shuffledArray = [...array];\n\n    for (let i = shuffledArray.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = shuffledArray[i];\n\n      shuffledArray[i] = shuffledArray[j];\n      shuffledArray[j] = temp;\n    }\n\n    return shuffledArray;\n  }\n\n  getCubicBezierCurve(p1, p2, p3, p4) {\n    const [x1, y1] = p1;\n    const [x2, y2] = p2;\n    const [x3, y3] = p3;\n    const [x4, y4] = p4;\n\n    return function (t) {\n      const fun = (p1, p2, p3, p4) => {\n        return Math.pow(1 - t, 3) * p1\n          + 3 * Math.pow(1 - t, 2) * t * p2\n          + 3 * (1 - t) * Math.pow(t, 2) * p3\n          + Math.pow(t, 3) * p4;\n      };\n\n      const xt = fun(x1, x2, x3, x4);\n      const yt = fun(y1, y2, y3, y4);\n\n      return [xt, yt];\n    }\n  }\n\n  onAnimationToggle() {\n    const { isAnimationOn } = this.state;\n\n    this.updateLocalStorage(LOCAL_STORAGE_ANIMATION_KEY, JSON.stringify({ isAnimationOn: !isAnimationOn }));\n    this.setState({\n      isAnimationOn: !isAnimationOn,\n    });\n  }\n\n  onPlayRoulette() {\n    const { rouletteSet } = this.props;\n    const { displayName, cursor, isAnimationOn } = this.state;\n    const trackList = Object.keys(rouletteSet);\n    const rouletteResult = trackList[Math.floor(Math.random() * trackList.length)];\n\n    if (trackList.length === 0) {\n      this.setState({\n        displayName: {\n          ...displayName,\n          one: ROULETTE_RESULT_GUIDE,\n        },\n      });\n\n      return;\n    }\n\n    if (isAnimationOn) {\n      const shuffledTrackList = this.shuffleFisherYates(trackList);\n\n      const startTime = new Date();\n      setTimeout(() => {\n        this.setState({\n          shouldPrepareStop: true,\n        });\n      }, ROULETTE_ANIMATION_DURATION);\n\n      this.setState({\n        displayName: {\n          ...displayName,\n          two: trackList[(cursor + 1) % trackList.length],\n        },\n        startTime,\n        rouletteResult,\n      });\n\n      requestAnimationFrame(this.animationCallback.bind(this, shuffledTrackList));\n    } else {\n      this.setState({\n        displayName: {\n          ...displayName,\n          one: ' ',\n        },\n        rouletteResult\n      });\n\n      setTimeout(() => {\n        this.setState({\n          displayName: {\n            ...displayName,\n            one: rouletteResult,\n          },\n          rouletteResult: null\n        });\n      }, 200);\n    }\n  }\n\n  getStyleTransform(pixelAccumulated, iteration, baseTranslation) {\n    const pixel = ((pixelAccumulated, iteration, baseTranslation) => {\n      if (pixelAccumulated < Math.abs(iteration)) {\n        const nextPixel = -pixelAccumulated + baseTranslation\n\n        return nextPixel;\n      } else {\n\n        return baseTranslation;\n      }\n    })(pixelAccumulated, iteration, baseTranslation);\n\n    return {\n      transform: `translateY(${ pixel }px)`,\n    }\n  }\n\n  animationCallback(trackList) {\n    const {\n      styleTransform,\n      pixelAccumulated,\n      displayName,\n      baseTranslation,\n      cursor,\n      shouldStop,\n      shouldPrepareStop,\n      cubicBezierCurve,\n      startTime,\n      rouletteResult\n    } = this.state;\n\n    const iteration = ROULETTE_HEIGHT;\n\n    const elapsedTime = Math.min(1, (new Date() - startTime) / ROULETTE_ANIMATION_DURATION);\n    const y = Math.min(1, cubicBezierCurve(elapsedTime)[1]);\n\n    const scale = Math.max(0.6, ROULETTE_SCALE - ROULETTE_SCALE * (y));\n    const nextPixelAccumulated = pixelAccumulated + Math.abs(scale);\n    const nextStyleTransform = {\n      ...styleTransform,\n      container: {\n        ...styleTransform['container'],\n        ...this.getStyleTransform(nextPixelAccumulated, iteration, baseTranslation),\n      }\n    };\n\n    if (nextPixelAccumulated >= Math.abs(iteration)) {\n      const nextDisplayName = ((_displayName, shouldPrepareStop, shouldStop) => {\n        const displayName = { ..._displayName };\n\n        if (shouldPrepareStop && !shouldStop) {\n          displayName['one'] = trackList[(cursor + 1) % trackList.length];\n          displayName['two'] = rouletteResult;\n        } else if (shouldStop) {\n          displayName['one'] = rouletteResult;\n          displayName['two'] = trackList[(cursor + 1) % trackList.length];\n        } else {\n          displayName['one'] = trackList[(cursor + 1) % trackList.length];\n          displayName['two'] = trackList[(cursor + 2) % trackList.length];\n        }\n\n        return displayName;\n      })(displayName, shouldPrepareStop, shouldStop);\n\n      const stateToUpdate = {\n        styleTransform: nextStyleTransform,\n        displayName: nextDisplayName,\n        cursor: cursor + 1,\n        pixelAccumulated: 0,\n      };\n\n      if (shouldPrepareStop) {\n        stateToUpdate['shouldStop'] = true;\n      }\n\n      if (!shouldStop) {\n        requestAnimationFrame(this.animationCallback.bind(this, trackList));\n      } else {\n        stateToUpdate['startTime'] = null;\n        stateToUpdate['shouldStop'] = false;\n        stateToUpdate['shouldPrepareStop'] = false;\n        stateToUpdate['rouletteResult'] = null;\n      }\n\n      this.setState(stateToUpdate);\n      return;\n    }\n\n    if (nextPixelAccumulated < Math.abs(iteration)) {\n      requestAnimationFrame(this.animationCallback.bind(this, trackList));\n\n      this.setState({\n        styleTransform: nextStyleTransform,\n        pixelAccumulated: nextPixelAccumulated\n      });\n    }\n  }\n\n  render() {\n    const {\n      styleTransform,\n      displayName,\n      isAnimationOn,\n      rouletteResult\n    } = this.state;\n \n    return (\n      <div className='roulette-result-component'>\n        <div className='roulette-result'>\n          <div className='roulette-container' style={ styleTransform['container'] } >\n            <div className='zero'>\n              { displayName['zero'] }\n            </div>\n            <div className='one'>\n              { displayName['one'] }\n            </div>\n            <div className='two'>\n              { displayName['two'] }\n            </div>\n          </div>\n        </div>\n        <div className='roulette-util'>\n          <button\n            className={ `roulette-button ${ rouletteResult ? 'off' : 'on' }` }\n            onClick={ this.onPlayRoulette }\n            disabled={ rouletteResult !== null }>\n            Play Roulette!\n          </button>\n          <div className='roulette-animation-on-off' onClick={ this.onAnimationToggle }>\n            <div className='description'> 룰렛 애니메이션 </div>\n            <div className= { `roulette-animation-switch ${ isAnimationOn ? 'on' : 'off' }` }>\n              <div className='slider-container'>\n                <div className={ `slider ${ isAnimationOn ? 'on' : 'off' }` }/>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  rouletteSet: state.rouletteSet\n});\nexport default connect(mapStateToProps)(RouletteResultComponent);\n","import React, { Component } from 'react';\nimport RouletteResultComponent from './RouletteResultComponent';\n\nexport default class RouletteComponent extends Component {\n  render() {\n \n    return (\n      <div className='kartrider-roulette-component'>\n        <RouletteResultComponent/>\n      </div>\n    );\n  }\n}","import React, { Component }  from 'react';\n\nexport default class CheckBoxComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    const { onClick, isChecked } = this.props;\n\n    if (onClick) {\n      onClick(!isChecked);\n    }\n  }\n\n\n  render() {\n    const { isChecked } = this.props;\n\n    return (\n      <div className='kartrider-checkbox-component' onClick={ this.onClick }>\n        <div className={ isChecked ? 'check-mark' : null }></div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { IMAGE_URL } from '../../database/constant';\n\nconst defaultTheme = {\n  \"themeName\": \"\",\n  \"themeOrder\": -1\n};\n\nexport default class TrackThemeItemComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    const { onSelectTheme, theme } = this.props;\n\n    if (theme['themeName']) {\n      onSelectTheme(theme);\n    }\n  }\n\n  render() {\n    const { theme = defaultTheme, isSelected } = this.props;\n\n    return (\n      <div className={ `kartrider-track-theme-item-component ${ isSelected ? 'selected' : '' }` }\n        onClick={ this.onClick }>\n        <img src={ `${IMAGE_URL}/theme/${theme['themeName']}.png` } alt='track theme icon'/>\n        <p>{ theme['themeName'] }</p>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { IMAGE_URL } from '../../database/constant';\n\nexport default class TrackItemComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      dotArray: [0,1,2,3,4]\n    };\n\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    const {\n      track = null,\n      isSelected = false,\n      onSelectTrack\n    } = this.props;\n\n    if (onSelectTrack) {\n      onSelectTrack(track, !isSelected);\n    }\n  }\n\n  render() {\n    const { track = null, isSelected = false } = this.props;\n    const { dotArray } = this.state;\n\n    return (\n      track &&\n      <div className='kartrider-track-item-component'>\n        <div className={ `border ${ isSelected ? 'selected' : '' }` }\n          onClick={ this.onClick }>\n          <div className='track-difficulty'>\n            <div className='text'>\n              난이도\n            </div>\n            <div className='dot-container'>\n              {\n                dotArray.map(i => {\n                  if (i <= track['difficulty'] - 1) {\n                    return (\n                      <div key={ i } className='dot on'></div>\n                    );\n                  } else {\n                    return (\n                      <div key={ i } className='dot'></div>\n                    );\n                  }\n                })\n              }\n            </div>\n          </div>\n          { track['isReverse'] &&\n            <div className='special reverse'>\n              Reverse\n            </div>\n          }\n          { track['isCrazy'] &&\n            <div className='special crazy'>\n              Crazy\n            </div>\n          }\n          <div className='track-image' >\n            <img src={ `${IMAGE_URL}/track/${ track['imageName'] }.png` } alt=\"track icon\" />\n          </div>\n        </div>\n        <div className='track-name'>\n          { track['trackName'] }\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport TrackThemeItemComponent from './TrackThemeItemComponent';\nimport TrackItemComponent from './TrackItemComponent';\n\nexport default class TrackContainerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectTheme = this.onSelectTheme.bind(this);\n    this.containerRef = React.createRef();\n  }\n\n  onSelectTheme(theme) {\n    const { onSelectTheme } = this.props;\n    this.scrollToRef();\n\n    if (onSelectTheme) {\n      onSelectTheme(theme);\n    }\n  }\n\n  scrollToRef() {\n    this.containerRef.current.scrollTo(0, 0);\n  }\n\n  render() {\n    const {\n      themeList,\n      selectedTheme,\n      selectedTrackList,\n      collectionTrackSet,\n      onSelectTrack,\n    } = this.props;\n\n    return (\n      <div className='kartrider-track-container-component'>\n        <div className='track-theme-selector-container'>\n          {\n            themeList.map(theme => {\n              return (\n                <TrackThemeItemComponent\n                  key={ theme['themeName'] }\n                  theme={ theme }\n                  isSelected={ selectedTheme && selectedTheme['themeName'] === theme['themeName'] }\n                  onSelectTheme={ this.onSelectTheme } />\n              )\n            })\n          }\n        </div>\n        <div className='track-item-container' ref={ this.containerRef }>\n          {\n            selectedTrackList.map(track => {\n              return (\n                <TrackItemComponent\n                  key={ track['trackName'] }\n                  track={ track }\n                  isSelected={  collectionTrackSet.has(track['trackName']) }\n                  onSelectTrack={ onSelectTrack } />\n              );\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport { defaultTrackType } from '../../database/constant';\n\nexport default class TrackThemeCheckboxComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange() {\n    const { name, onChange, isChecked } = this.props;\n\n    if (onChange) {\n      onChange(defaultTrackType[name], !isChecked);\n    }\n  }\n\n  render() {\n    const { name, isChecked } = this.props;\n\n    return (\n      <div className='kartrider-track-theme-checkbox-component'>\n        <label className=\"track-theme-checkbox\">\n          <input\n            type=\"checkbox\"\n            onChange={ this.onChange }\n            checked={ isChecked }/>\n          <span>{ name ? name : '스피드' }</span>\n        </label>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport TrackThemeCheckboxComponent from './TrackThemeCheckboxComponent';\nimport { IMAGE_URL } from '../../database/constant';\n\n\nexport default class TrackPopupHeaderComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClose = this.onClose.bind(this);\n    this.onCheck = this.onCheck.bind(this);\n  }\n\n  onClose() {\n    const { onClose } = this.props;\n    onClose();\n  }\n\n  onCheck(trackType, isChecked) {\n    const { onCheck } = this.props;\n    if (onCheck) {\n      onCheck(trackType, isChecked);\n    }\n  }\n\n  render() {\n    const { name, trackTypeCheckbox, onChange } = this.props;\n\n    return (\n      <div className='kartrider-track-popup-header-component'>\n        <div className='track-popup-header'>\n          <div className='track-popup-title'>\n            <input\n              type='text'\n              placeholder='컬렉션 이름 ex) 나만의 컬렉션'\n              value={ name }\n              onChange={ onChange } />\n          </div>\n          <button className='track-popup-close' onClick={ this.onClose }>\n            <img src={ `${IMAGE_URL}/close.png` } alt='track popup close'/>\n          </button>\n        </div>\n        <div className='track-popup-theme'>\n          <div className='track-theme-text'>\n            테마선택\n          </div>\n          <div className='track-theme-selector'>\n            <TrackThemeCheckboxComponent\n              name={ '스피드' }\n              isChecked={ trackTypeCheckbox['speed'] }\n              onChange={ this.onCheck }/>\n            <TrackThemeCheckboxComponent\n              name={ '아이템' }\n              isChecked={ trackTypeCheckbox['item'] }\n              onChange={ this.onCheck }/>\n            <TrackThemeCheckboxComponent\n              name={ '전체' }\n              isChecked={ trackTypeCheckbox['all'] }\n              onChange={ this.onCheck }/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\n\nexport default class TrackPopupFooterComponent extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(isSubmit) {\n    this.props.onClose(isSubmit);\n  }\n\n  render() {\n    return (\n      <div className='kartrider-track-popup-footer-component'>\n        <button tabIndex='-1' className='footer-okay'\n          onClick={ this.onSubmit.bind(this, true) }>\n          선택\n        </button>\n        <button tabIndex='-1' className='footer-close'\n          onClick={ this.onSubmit.bind(this, false) }>\n          취소\n        </button>\n      </div>\n    );\n  }\n}\n","import trackData from './track_data.json';\nimport themeData from './theme_data.json';\nimport collectionDefaultData from './collection_default_data.json';\n\n\nconst DATABASE_NAME = 'ROULETTE_DB';\nconst VERSION = 1;\nconst OBJECT_STORE_TRACK = 'track';\nconst OBJECT_STORE_THEME = 'theme';\nconst OBJECT_STORE_COLLECTION = 'collection';\n\n\nclass IndexedDBManager {\n  constructor() {\n    this.db = null;\n    this.open();\n  }\n\n  async tryOpen() {\n    if (this.db !== null) {\n      return true;\n    }\n\n    return new Promise((resolve, reject) => {\n      const request = indexedDB.open(DATABASE_NAME, VERSION);\n      request.onerror = event => {\n        console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\n        reject(event);\n      };\n\n      request.onsuccess = event => {\n        console.log('open db!');\n        const db = event.target.result;\n        this.db = db;\n        resolve(true);\n      };\n    })\n  }\n\n  open() {\n    const request = indexedDB.open(DATABASE_NAME, VERSION);\n    request.onerror = event => {\n      console.log(\"Why didn't you allow my web app to use IndexedDB?!\");\n    };\n\n    request.onsuccess = event => {\n      console.log('open db!');\n      const db = event.target.result;\n      this.db = db;\n    };\n\n    request.onupgradeneeded = event => {\n      const db = event.target.result;\n      const objectStore = db.createObjectStore(OBJECT_STORE_TRACK, { keyPath: 'trackName' });\n      db.createObjectStore(OBJECT_STORE_COLLECTION, { keyPath: 'id', autoIncrement: true });\n      db.createObjectStore(OBJECT_STORE_THEME, { keyPath: 'themeName' });\n\n      objectStore.createIndex(`index_${OBJECT_STORE_TRACK}_theme`, 'theme', { unique: false });\n      objectStore.createIndex(`index_${OBJECT_STORE_TRACK}_trackType`, 'trackType', { unique: false });\n\n      objectStore.transaction.oncomplete = event => {\n        const trackObjectStore = db.transaction([OBJECT_STORE_TRACK], 'readwrite').objectStore(OBJECT_STORE_TRACK);\n        trackData.forEach(track => {\n          trackObjectStore.add(track);\n        });\n\n        const objectStoreCollection = db.transaction(OBJECT_STORE_COLLECTION, 'readwrite').objectStore(OBJECT_STORE_COLLECTION);\n        collectionDefaultData.forEach(collection => {\n          objectStoreCollection.add(collection);\n        });\n\n        const themeObjectStore = db.transaction(OBJECT_STORE_THEME, 'readwrite').objectStore(OBJECT_STORE_THEME);\n        themeData.forEach(theme => {\n          themeObjectStore.add(theme);\n        });\n      };\n    };\n  }\n\n  async getAllColection() {\n    await this.tryOpen();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([OBJECT_STORE_COLLECTION]);\n      const objectStore = transaction.objectStore(OBJECT_STORE_COLLECTION);\n      const request = objectStore.getAll();\n\n      request.onerror = function(event) {\n        // Handle errors!\n        console.log(\"onerror, \", event);\n        reject(event);\n      };\n\n      request.onsuccess = function(event) {\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  async getAllTrackList() {\n    await this.tryOpen();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([OBJECT_STORE_TRACK]);\n      const objectStore = transaction.objectStore(OBJECT_STORE_TRACK);\n      const request = objectStore.getAll();\n\n      request.onerror = function(event) {\n        // Handle errors!\n        console.log(\"onerror, \", event);\n        reject(event);\n      };\n\n      request.onsuccess = function(event) {\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  async getTrackList(keys) {\n    await this.tryOpen();\n\n    return new Promise((resolve, reject) => {\n      const resultArray = [];\n\n      const transaction = this.db.transaction([OBJECT_STORE_TRACK]);\n      const objectStore = transaction.objectStore(OBJECT_STORE_TRACK);\n      keys.forEach(key => {\n        const request = objectStore.get(key);\n        request.onsuccess = function(event) {\n          resultArray.push(event.target.result);\n        };\n      });\n\n      transaction.oncomplete = (event) => {\n        resolve(resultArray);\n      }\n\n      transaction.onabort = (event) => {\n        reject(event);\n      }\n\n      transaction.onerror = (event) => {\n        reject(event);\n      }\n    });\n  }\n\n  async getAllThemeList() {\n    await this.tryOpen();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([OBJECT_STORE_THEME]);\n      const objectStore = transaction.objectStore(OBJECT_STORE_THEME);\n      const request = objectStore.getAll();\n\n      request.onerror = function(event) {\n        // Handle errors!\n        console.log(\"onerror, \", event);\n        reject(event);\n      };\n\n      request.onsuccess = function(event) {\n        resolve(event.target.result);\n      };\n    });\n  }\n\n  async getTrackByTheme(themeKey) {\n    await this.tryOpen();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([OBJECT_STORE_TRACK]);\n      const objectStore = transaction.objectStore(OBJECT_STORE_TRACK);\n      const index = objectStore.index(`index_${OBJECT_STORE_TRACK}_theme`);\n      const resultArray = []\n\n      index.openCursor(IDBKeyRange.only(themeKey)).onsuccess = (event) => {\n        const cursor = event.target.result;\n\n        if (cursor) {\n          resultArray.push(cursor.value);\n\n          cursor.continue();\n        }\n      }\n\n      transaction.oncomplete = _ => {\n        resolve(resultArray);\n      }\n\n      transaction.onabort = _ => {\n        resolve(resultArray);\n      }\n    });\n  }\n\n  formatTwoDigit(time) {\n    return time.substring(time.length - 2, time.length);\n  }\n\n  async createCollection() {\n    await this.tryOpen();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([OBJECT_STORE_COLLECTION], 'readwrite');\n      const objectStore = transaction.objectStore(OBJECT_STORE_COLLECTION);\n\n      const currentDate = new Date();\n      const hours = `0${currentDate.getHours()}`;\n      const minutes = `0${currentDate.getMinutes()}`;\n      const seconds = `0${currentDate.getSeconds()}`;\n\n      const collectionName =\n        `카트라이더 컬렉션! ${ this.formatTwoDigit(hours) }:${ this.formatTwoDigit(minutes) }:${ this.formatTwoDigit(seconds) }`;\n      const newCollection = {\n        \"name\": collectionName,\n        \"createdAt\": (new Date()).toISOString(),\n        \"trackList\": [],\n      };\n      const request = objectStore.add(newCollection);\n\n      request.onsuccess = event => {\n        resolve(true);\n      }\n    });\n  }\n\n  async updateCollection(collection) {\n    await this.tryOpen();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([OBJECT_STORE_COLLECTION], 'readwrite');\n      const objectStore = transaction.objectStore(OBJECT_STORE_COLLECTION);\n      const request = objectStore.put(collection);\n\n      request.onsuccess = _ => {\n        resolve(true);\n      }\n    });\n  }\n\n  async deleteCollection(key) {\n    await this.tryOpen();\n\n    return new Promise((resolve, reject) => {\n      const transaction = this.db.transaction([OBJECT_STORE_COLLECTION], 'readwrite');\n      const objectStore = transaction.objectStore(OBJECT_STORE_COLLECTION);\n      const request = objectStore.delete(key);\n\n      request.onsuccess = _ => {\n        resolve(true);\n      }\n    });\n  }\n}\n\nconst idbManagerInstance = new IndexedDBManager();\nexport default idbManagerInstance;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport TrackContainerComponent from './TrackContainerComponent';\nimport TrackPopupHeaderComponent from './TrackPopupHeaderComponent';\nimport TrackPopupFooterComponent from './TrackPopupFooterComponent';\nimport IndexedDbManager from '../../database/IndexedDbManager';\nimport { UPDATE_COLLECTION } from '../../database/constant';\n\nexport default class TrackPopupComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collectionTrackSet: new Set(),\n      themeList: [],\n      selectedTheme: null,\n      selectedTrackList: [],\n      trackTypeCheckbox: {\n        speed: false,\n        item: false,\n        all: false,\n      },\n      collectionName: '',\n    };\n    this.divFocus = React.createRef();\n\n    this.onSelectTheme = this.onSelectTheme.bind(this);\n    this.onSelectTrack = this.onSelectTrack.bind(this);\n    this.onClose = this.onClose.bind(this);\n    this.onCheck = this.onCheck.bind(this);\n    this.onInputValueChange = this.onInputValueChange.bind(this);\n    this.onKeyDownTest = this.onKeyDownTest.bind(this);\n  }\n\n  static open(props) {\n    const promise = new Promise((resolve, reject) => {\n      const component = React.createElement(\n        this, { ...props, resolve }, null);\n      ReactDOM.render(component, document.getElementById('popup-root'));\n    });\n\n    return promise;\n  }\n\n  close(isSubmit) {\n    const { resolve, collection } = this.props;\n    const emptyValue = {\n      action: null,\n    };\n\n    try {\n      if (isSubmit) {\n        const diff = this.getDiffCollection();\n        const value = ((diff, collection) => {\n          if (Object.keys(diff).length) {\n            return {\n              action: UPDATE_COLLECTION,\n              payload: {\n                ...collection,\n                ...diff\n              }\n            }\n          } else {\n            return {\n              action: null,\n            };\n          }\n        })(diff, collection);\n\n        resolve(value);\n      } else {\n        resolve(emptyValue);\n      }\n    } catch (error) {\n      resolve(emptyValue);\n    } finally {\n      const popupRoot = document.getElementById('popup-root');\n      ReactDOM.unmountComponentAtNode(popupRoot);\n    }\n  }\n\n  getDiffCollection() {\n    const { collection } = this.props;\n    const { collectionName, collectionTrackSet } = this.state;\n    const payload = {};\n\n\n    if (collection['name'] !== collectionName) {\n      payload['name'] = collectionName;\n    }\n\n    if (collection['trackList'].length !== collectionTrackSet.size) {\n      payload['trackList'] = [...collectionTrackSet];\n    } else {\n      const arr = collection['trackList'].filter(track => collectionTrackSet.has(track));\n\n      if (arr.length !== collectionTrackSet.size) {\n        payload['trackList'] = [...collectionTrackSet];\n      }\n    }\n\n    return payload;\n  }\n\n  onInputValueChange(event) {\n    this.setState({\n      collectionName: event.target.value,\n    });\n  }\n\n  onClose(isSubmit = false) {\n    this.close(isSubmit);\n  }\n\n  onCheck(trackType, isChecked) {\n    const {\n      selectedTrackList,\n      collectionTrackSet,\n      trackTypeCheckbox,\n    } = this.state;\n\n    const trackListToAdd = ((currentTrackList, trackType) => {\n      if (trackType === 'all') {\n        return currentTrackList.map(track => track['trackName']);\n      } else {\n        return currentTrackList.filter(track => {\n          return track['trackType'] === trackType;\n        }).map(track => track['trackName']);\n      }\n    })(selectedTrackList, trackType);\n\n    const nextCollectionTrackSet = ((collectionTrackSet, trackListToAdd, isChecked) => {\n      if (isChecked) {\n        return new Set([...collectionTrackSet, ...trackListToAdd]);\n      } else {\n        const trackListToAddSet = new Set(trackListToAdd);\n        return new Set([...collectionTrackSet].filter(track => !trackListToAddSet.has(track)));\n      }\n    })(collectionTrackSet, trackListToAdd, isChecked);\n\n    this.setState({\n      collectionTrackSet: nextCollectionTrackSet,\n      trackTypeCheckbox: {\n        ...trackTypeCheckbox,\n        [trackType]: isChecked,\n      }\n    });\n  }\n\n  async getTrackList(theme) {\n    const trackList = await IndexedDbManager.getTrackByTheme(theme);\n\n    trackList.sort((a, b) => {\n      if (a['isReverse'] && !b['isReverse']) {\n        return 1;\n      }\n\n      if (!a['isReverse'] && b['isReverse']) {\n        return -1;\n      }\n\n      return b['difficulty'] - a['difficulty'];\n    });\n\n    return trackList;\n  }\n\n  async onSelectTheme(theme) {\n    const selectedTrackList = await this.getTrackList(theme['themeName']);\n    this.setState({\n      selectedTheme: theme,\n      selectedTrackList,\n      trackTypeCheckbox: {\n        speed: false,\n        item: false,\n        all: false,\n      },\n    });\n  }\n\n  onSelectTrack(track, isSelected) {\n    const { collectionTrackSet } = this.state;\n    const nextCollectionTrackSet = ((collectionTrackSet, isSelected) => {\n      if (isSelected) {\n        // add to set\n        return new Set([...collectionTrackSet, track['trackName']]);\n      } else {\n        // remove from set\n        return new Set([...collectionTrackSet].filter(trackName => trackName !== track['trackName']));\n      }\n    })(collectionTrackSet ,isSelected);\n\n    this.setState({\n      collectionTrackSet: nextCollectionTrackSet,\n    });\n  }\n\n  async componentDidMount() {\n    const { collection } = this.props;\n\n    const themeList = await IndexedDbManager.getAllThemeList();\n    themeList.sort((a, b) => b['themeOrder'] - a['themeOrder']);\n\n    const selectedTheme = themeList[0];\n    const selectedTrackList = await this.getTrackList(selectedTheme['themeName']);\n\n    this.divFocus.current.focus();\n\n    this.setState({\n      collectionTrackSet: new Set(collection['trackList']),\n      themeList,\n      selectedTheme,\n      selectedTrackList,\n      collectionName: collection['name'],\n    });\n  }\n\n  onKeyDownTest(event) {\n    if (event.type === 'keydown' && event.keyCode === 27) {\n      this.onClose(false);\n    }\n  }\n\n  render() {\n    const {\n      themeList,\n      collectionTrackSet,\n      selectedTheme,\n      selectedTrackList,\n      trackTypeCheckbox,\n      collectionName,\n    } = this.state;\n\n    return (\n      <div className='kartrider-track-popup-component'>\n        <div className='track-popup-container'\n          tabIndex=\"0\"\n          ref={ this.divFocus }\n          onKeyDown={ this.onKeyDownTest }>\n          <TrackPopupHeaderComponent\n            name={ collectionName }\n            onCheck={ this.onCheck }\n            onClose={ this.onClose }\n            onChange={ this.onInputValueChange }\n            trackTypeCheckbox={ trackTypeCheckbox } />\n          <TrackContainerComponent\n            themeList={ themeList }\n            onSelectTheme={ this.onSelectTheme }\n            onSelectTrack={ this.onSelectTrack }\n            selectedTheme={ selectedTheme }\n            selectedTrackList={ selectedTrackList }\n            collectionTrackSet={ collectionTrackSet } />\n          <TrackPopupFooterComponent onClose={ this.onClose } />\n        </div>\n      </div>\n    );\n  }\n}\n","import {\n  ADD_ROULETTE_SET,\n  DELETE_ROULETTE_SET,\n  DELETE_ALL_ROULETTE_SET,\n} from './actionType';\n\nexport const addRouletteSet = trackList => ({\n  type: ADD_ROULETTE_SET,\n  payload: trackList,\n});\n\nexport const deleteRouletteSet = trackList => ({\n  type: DELETE_ROULETTE_SET,\n  payload: trackList,\n});\n\nexport const deleteAllRouletteSet = _ => ({\n  type: DELETE_ALL_ROULETTE_SET\n});\n","export const ADD_ROULETTE_SET = \"ADD_ROULETTE_SET\";\nexport const DELETE_ROULETTE_SET = \"DELETE_ROULETTE_SET\";\nexport const DELETE_ALL_ROULETTE_SET = \"DELETE_ALL_ROULETTE_SET\";\n","import React, { Component } from 'react';\nimport CheckBoxComponent from '../CheckBoxComponent';\nimport { IMAGE_URL } from '../../database/constant';\nimport { connect } from 'react-redux';\nimport TrackPopupComponent from '../TrackPopup/TrackPopupComponent';\nimport { UPDATE_COLLECTION } from '../../database/constant';\nimport IndexedDbManager from '../../database/IndexedDbManager';\nimport { addRouletteSet, deleteRouletteSet } from '../../redux/action';\n\n\nclass CollectionItemComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collectionName: '형독 컬렉션!',\n    };\n\n    this.onEditItem = this.onEditItem.bind(this);\n    this.onDeleteItem = this.onDeleteItem.bind(this);\n    this.onDetail = this.onDetail.bind(this);\n    this.onSelectCollection = this.onSelectCollection.bind(this);\n  }\n\n  async onEditItem() {\n    const { collection, syncCollection, isChecked } = this.props;\n\n    document.body.style.overflowY = 'hidden';\n    const result = await TrackPopupComponent.open({\n      collection,\n    });\n    document.body.style.overflowY = '';\n\n    if (result['action'] === UPDATE_COLLECTION) {\n      const updatedCollection = result['payload'];\n\n      if (isChecked) {\n        this.props.dispatch(deleteRouletteSet(collection['trackList']));\n        this.props.dispatch(addRouletteSet(updatedCollection['trackList']));\n      }\n\n      await IndexedDbManager.updateCollection(updatedCollection);\n      await syncCollection();\n    }\n  }\n\n  onSelectCollection(isChecked) {\n    const { collection, onCheck } = this.props;\n\n    if (isChecked) {\n      this.props.dispatch(addRouletteSet(collection['trackList']));\n    } else {\n      this.props.dispatch(deleteRouletteSet(collection['trackList']));\n    }\n\n    if (onCheck) {\n      onCheck(isChecked, collection['id']);\n    }\n  }\n\n  onDeleteItem() {\n    const { collection, onDelete, isChecked } = this.props;\n\n    if (isChecked) {\n      this.props.dispatch(deleteRouletteSet(collection['trackList']));\n    }\n\n    onDelete(collection);\n  }\n\n  onDetail() {\n    const { collection } = this.props;\n    this.props.onClick(true, collection['id']);\n  }\n\n  render() {\n    const { collection, isChecked } = this.props;\n    const { collectionName } = this.state;\n\n    return (\n      <div className='kartrider-collection-item-component'>\n        <div className='collection-item-checkbox'>\n          <CheckBoxComponent\n            isChecked={ isChecked }\n            onClick={ this.onSelectCollection } />\n        </div>\n        <div className='collection-data'>\n          <div>\n            <div className='collection-name'>\n              { collection ? collection['name'] : collectionName }\n            </div>\n            <div className='collection-util'>\n              <button className='collection-edit' onClick={ this.onEditItem } >\n                <img src={ `${IMAGE_URL}/icon_track.png` } alt=\"track icon\" />\n              </button>\n              <button className='collection-delete' onClick={ this.onDeleteItem }>\n              <img src={ `${IMAGE_URL}/icon_delete.svg` } alt=\"delete icon\" />\n              </button>\n              <button className='collection-detail' onClick={ this.onDetail }>\n                <img src={ `${IMAGE_URL}/icon_arrow_right.png` } alt=\"detail icon\" />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(CollectionItemComponent);\n","import React, { Component } from 'react';\nimport { IMAGE_URL, ROULETTE_COLLECTION_ID } from '../../database/constant';\nimport IndexedDbManager from '../../database/IndexedDbManager';\n\nexport default class CollectionDetailItemComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      trackList: [],\n      themeList: [],\n    }\n\n    this.onBack = this.onBack.bind(this);\n    this.onDeleteItem = this.onDeleteItem.bind(this);\n    this.getTrackLength = this.getTrackLength.bind(this);\n  }\n\n  onBack() {\n    this.props.onClick(false, null);\n  }\n\n  onDeleteItem(trackName) {\n    const { collectionId, onDelete } = this.props;\n\n    if (onDelete) {\n      onDelete(collectionId, trackName);\n    }\n  }\n\n  async componentDidMount() {\n    const themeList = await IndexedDbManager.getAllThemeList();\n    themeList.sort((a, b) => b['themeOrder'] - a['themeOrder']);\n\n    this.setState({\n      themeList,\n    });\n  }\n\n  getTrackLength(trackList) {\n    return Object.values(trackList).reduce((acc, array) => {\n      const arr = array || [];\n      acc += arr.length;\n\n      return acc;\n    }, 0);\n  }\n\n  getDetailTitle() {\n    const { collectionId, trackList } = this.props;\n\n    if (collectionId === ROULETTE_COLLECTION_ID) {\n      return `룰렛에 있는 트랙 (${ this.getTrackLength(trackList) })`;\n    } else {\n      return `선택된 트랙 (${ this.getTrackLength(trackList) })`;\n    }\n  }\n\n  render() {\n    const { trackList, collectionId } = this.props;\n    const { themeList } = this.state;\n\n    return (\n      <div className='kartrider-collection-detail-item-component'>\n        <h3 className='collection-detail-title' >\n          <div>\n            { this.getDetailTitle() }\n          </div>\n          <button className='collection-detail-back' onClick={ this.onBack } >\n            <img src={ `${IMAGE_URL}/icon_back.png` } alt=\"back to collection list icon\" />\n          </button>\n        </h3>\n        <div className='collection-detail-track-container'>\n          {\n            themeList.map(theme => {\n              const tracks = trackList[theme['themeName']] || [];\n              if (!tracks.length) {\n                return null;\n              }\n\n              return tracks.map(track => {\n                return (\n                  <div key={ `key-detail-${track['trackName']}` } className='collection-detail-track'>\n                    <img src={ `${IMAGE_URL}/theme/${track.theme}.png` } alt=\"track icon\" />\n                    <div>\n                      { track['trackName'] }\n                    </div>\n                    {\n                      collectionId === ROULETTE_COLLECTION_ID\n                      ? null\n                      : <button className='collection-detail-delete' onClick={ this.onDeleteItem.bind(this, track['trackName']) }>\n                          <img src={ `${IMAGE_URL}/icon_delete.svg` } alt=\"delete icon\" />\n                        </button>\n                    }\n                  </div>\n                );\n              })\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nCollectionDetailItemComponent.defaultProps = {\n  \"trackList\": {},\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CollectionItemComponent from './CollectionItemComponent';\nimport CollectionDetailItemComponent from './CollectionDetailItemComponent';\nimport CheckBoxComponent from '../CheckBoxComponent';\nimport IndexedDbManager from '../../database/IndexedDbManager';\nimport {\n  addRouletteSet,\n  deleteRouletteSet,\n  deleteAllRouletteSet,\n} from '../../redux/action';\nimport {\n  LOCAL_STORAGE_COLLECTION_KEY,\n  ROULETTE_COLLECTION_ID,\n} from '../../database/constant';\n\nclass CollectionTableComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchText: 'This is search component!',\n      isTableHidden: false,\n      isAllChecked: false,\n      collectionObject: {},\n      collectionCheckedObject: {},\n      selectedCollection: {\n        collectionId: -1,\n        trackList: {},\n      }\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onDetail = this.onDetail.bind(this);\n    this.onCreateCollection = this.onCreateCollection.bind(this);\n    this.onDeleteCollection = this.onDeleteCollection.bind(this);\n    this.onDeleteTrack = this.onDeleteTrack.bind(this);\n    this.onSelectCollection = this.onSelectCollection.bind(this);\n    this.getAllColection = this.getAllColection.bind(this);\n  }\n\n  async componentDidMount() {\n    const collectionObject = await this.getAllColection();\n\n    const value = localStorage.getItem(LOCAL_STORAGE_COLLECTION_KEY);\n    if (value) {\n      try {\n        const collectionCheckedObject = JSON.parse(value);\n\n        const nextCollectionCheckedObject = {};\n        const checkedCollectionObject = {};\n\n        Object.keys(collectionObject).forEach(id => {\n          if (collectionCheckedObject[id]) {\n            nextCollectionCheckedObject[id] = collectionCheckedObject[id];\n            checkedCollectionObject[id] = collectionObject[id];\n          }\n        });\n\n        const isAllChecked = ((checkedArray, collectionArray) => {\n          if (checkedArray.length === 0) {\n            return false;\n          }\n\n          if (collectionArray.length !== checkedArray.length) {\n            return false;\n          }\n\n          return checkedArray.every(bool => bool);\n        })(Object.values(nextCollectionCheckedObject), Object.keys(collectionObject));\n\n        this.setState({\n          collectionCheckedObject: nextCollectionCheckedObject,\n          isAllChecked,\n        });\n        this.updateLocalStorage(LOCAL_STORAGE_COLLECTION_KEY, JSON.stringify(nextCollectionCheckedObject));\n        this.updateRouletteSet(checkedCollectionObject);\n      } catch (error) {\n        // error occurred!\n      }\n    }\n  }\n\n  async getAllColection() {\n    const collectionList = await IndexedDbManager.getAllColection();\n    const collectionObject = {};\n\n    collectionList.forEach(collection => {\n      collectionObject[collection.id] = collection;\n    });\n\n    this.setState({\n      collectionObject,\n    });\n\n    return collectionObject;\n  }\n\n  onChange(event) {\n    this.setState({\n      searchText: event.target.value,\n    });\n  }\n\n  async onDeleteCollection(collection) {\n    await IndexedDbManager.deleteCollection(collection['id']);\n    await this.getAllColection();\n  }\n\n  async onDeleteTrack(collectionId = null, trackName) {\n    const { collectionObject } = this.state;\n\n    if (collectionId === null || collectionId === ROULETTE_COLLECTION_ID) {\n      return;\n    }\n\n    const collection = collectionObject[collectionId];\n\n    const oldTrackList = collection['trackList'];\n    const newTrackList = collection['trackList'].filter(name => name !== trackName);\n\n    this.props.dispatch(deleteRouletteSet(oldTrackList));\n    this.props.dispatch(addRouletteSet(newTrackList));\n\n    const updatedCollection = {\n      ...collection,\n      trackList: newTrackList,\n    };\n\n    await IndexedDbManager.updateCollection(updatedCollection);\n    await this.getAllColection();\n    await this.syncSelectedCollection(collectionId);\n  }\n\n  async syncSelectedCollection(selectedCollectionId = null) {\n    const { collectionObject } = this.state;\n\n    const selectedCollection = await (async () => {\n      const collection = collectionObject[selectedCollectionId];\n      if (collection) {\n        const trackList = await IndexedDbManager.getTrackList(collection['trackList']);\n\n        const object = trackList.reduce((acc, track) => {\n          acc[track['theme']] = acc[track['theme']] || [];\n          acc[track['theme']] = [...acc[track['theme']], track];\n\n          return acc;\n        }, {});\n\n        return {\n          collectionId: collection['id'],\n          trackList: object,\n        };\n      } else {\n        return null;\n      }\n    })();\n\n    if (selectedCollection) {\n      this.setState({ selectedCollection });\n    }\n  }\n\n  async getRouletteSetAsCollectionFormat() {\n    const { rouletteSet } = this.props;\n\n    const selectedCollection = await (async () => {\n      if (Object.keys(rouletteSet).length > 0) {\n        const trackList = await IndexedDbManager.getTrackList(Object.keys(rouletteSet));\n\n        const object = trackList.reduce((acc, track) => {\n          acc[track['theme']] = acc[track['theme']] || [];\n          acc[track['theme']] = [...acc[track['theme']], track];\n\n          return acc;\n        }, {});\n\n        return {\n          collectionId: ROULETTE_COLLECTION_ID,\n          trackList: object,\n        };\n      } else {\n        return {\n          collectionId: ROULETTE_COLLECTION_ID,\n          trackList: {},\n        };\n      }\n    })();\n\n    this.setState({ selectedCollection });\n  }\n\n  async onDetail(isTableHidden, selectedCollectionId = null) {\n    if (ROULETTE_COLLECTION_ID === selectedCollectionId) {\n      await this.getRouletteSetAsCollectionFormat();\n    } else {\n      await this.syncSelectedCollection(selectedCollectionId);\n    }\n\n    this.setState({ isTableHidden });\n  }\n\n  async onCreateCollection() {\n    await IndexedDbManager.createCollection();\n    await this.getAllColection();\n  }\n\n  updateLocalStorage(key, value) {\n    localStorage.setItem(key, value);\n  }\n\n  updateRouletteSet(collectionObject) {\n    const collectionTrackList = ((collectionObject) => {\n      const trackSet = new Set();\n\n      Object.values(collectionObject).forEach(collection => {\n        collection['trackList'].forEach(track => {\n          trackSet.add(track);\n        });\n      });\n\n      return [...trackSet];\n   })(collectionObject);\n\n   this.props.dispatch(deleteAllRouletteSet());\n   this.props.dispatch(addRouletteSet(collectionTrackList));\n  }\n\n  onSelectCollection(isChecked, collectionId = 'all') {\n    const { collectionCheckedObject, collectionObject } = this.state;\n    const nextCollectionCheckedObject = { ...collectionCheckedObject };\n\n    if (collectionId === 'all') {\n      // select all!\n      Object.keys(collectionObject).forEach(collectionId => {\n        nextCollectionCheckedObject[collectionId] = isChecked;\n      });\n\n      if (isChecked) {\n        this.updateRouletteSet(collectionObject);\n      } else {\n        this.props.dispatch(deleteAllRouletteSet());\n      }\n\n      this.setState({\n        isAllChecked: isChecked,\n        collectionCheckedObject: nextCollectionCheckedObject\n      });\n\n      this.updateLocalStorage(LOCAL_STORAGE_COLLECTION_KEY, JSON.stringify(nextCollectionCheckedObject));\n\n      return;\n    } else {\n      nextCollectionCheckedObject[collectionId] = isChecked;\n      this.setState({\n        collectionCheckedObject: nextCollectionCheckedObject\n      });\n\n      this.updateLocalStorage(LOCAL_STORAGE_COLLECTION_KEY, JSON.stringify(nextCollectionCheckedObject));\n    }\n  }\n\n  render() {\n    const {\n      isTableHidden,\n      isAllChecked,\n      collectionObject,\n      selectedCollection,\n      collectionCheckedObject\n    } = this.state;\n\n    return (\n      <div className='kartrider-collection-table-component'>\n        <div className='collection-container'>\n          <div className={ `collection-list ` + (isTableHidden ? 'hidden' : 'show') } >\n            <div className='collection-list-header'>\n              <div className='collection-checkbox'>\n                <CheckBoxComponent\n                  isChecked={ isAllChecked }\n                  onClick={ this.onSelectCollection } />\n              </div>\n              <div className='collection-header-title'>\n                <div className='header-text'>\n                  컬렉션 이름\n                </div>\n                <div className='collection-util'>\n                  <button onClick={ this.onCreateCollection }>\n                    추가\n                  </button>\n                  <button\n                    className='roulette-set'\n                    onClick={ this.onDetail.bind(this, true, ROULETTE_COLLECTION_ID) }>\n                      룰렛 보기\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className='collection-list-body'>\n              {\n                Object.values(collectionObject).map(collection => {\n                  return (\n                    <CollectionItemComponent\n                      onClick={ this.onDetail }\n                      onDelete={ this.onDeleteCollection }\n                      onCheck={ this.onSelectCollection }\n                      syncCollection={ this.getAllColection }\n                      key={ `key-${collection.id}` }\n                      collection={ collection }\n                      isChecked={ !!collectionCheckedObject[collection['id']] }/>\n                  );\n                })\n              }\n            </div>\n          </div>\n          <div className={ `detail-component ${ isTableHidden ? 'show' : 'hidden' }` }>\n            <CollectionDetailItemComponent\n              collectionId={ selectedCollection['collectionId'] }\n              trackList={ selectedCollection['trackList'] }\n              onClick={ this.onDetail }\n              onDelete={ this.onDeleteTrack } />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  rouletteSet: state.rouletteSet\n});\nexport default connect(mapStateToProps)(CollectionTableComponent);\n","import React, { Component } from 'react';\nimport CollectionTableComponent from './CollectionTableComponent';\n\nexport default class CollectionComponent extends Component {\n  render() {\n    return (\n      <div className='kartrider-collection-component'>\n        <CollectionTableComponent />\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\n\nexport default class DataSourceDescriptionComponent extends Component {\n  render() {\n    return (\n      <div className='kartrider-datasource-description-component'>\n        Data based on NEXON DEVELOPERS\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { IMAGE_URL } from '../database/constant';\n\nexport default class FooterComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickId = this.onClickId.bind(this);\n    this.onClickRepo = this.onClickRepo.bind(this);\n  }\n\n  onClickId() {\n    window.open('https://github.com/24seconds/', '_blank');\n  }\n\n  onClickRepo() {\n    window.open('https://github.com/24seconds/kartrider-roulette', '_blank');\n  }\n\n  render() {\n    return (\n      <div className='kartrider-footer'>\n        <div onClick={ this.onClickId }>\n          <img className='github-mark' src={ `${IMAGE_URL}/icon_github_mark.png` } alt=\"github icon\" />\n            24seconds\n        </div>\n        <div onClick={ this.onClickRepo }>\n          <img className='github-mark' src={ `${IMAGE_URL}/icon_github_mark.png` } alt=\"github icon\" />\n          repo : kartrider-roulette\n        </div>\n      </div>\n    );\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport './style/index.scss';\n\nimport RouletteComponent from './component/Roulette/RouletteComponent';\nimport CollectionComponent from './component/Collection/CollectionComponent';\nimport DataSourceDescripitonComponent from './component/DataSourceDescripitonComponent';\nimport FooterComponent from './component/FooterComponent';\nimport './database/IndexedDbManager.js';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>카트라이더 룰렛!</h3>\n        {/* <AppHeaderComponent/> */}\n        <RouletteComponent />\n        <DataSourceDescripitonComponent />\n        <CollectionComponent />\n        <FooterComponent />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport {\n  ADD_ROULETTE_SET,\n  DELETE_ROULETTE_SET,\n  DELETE_ALL_ROULETTE_SET,\n} from \"./actionType\";\n\nfunction rouletteSet(state = {}, action) {\n  if (action.type === ADD_ROULETTE_SET) {\n    const newState = { ...state };\n\n    action.payload.forEach(track => {\n      newState[track] = newState[track] || 0;\n      newState[track] += 1;\n    });\n\n    return newState;\n  } else if (action.type === DELETE_ROULETTE_SET) {\n    const newState = { ...state };\n\n    action.payload.forEach(track => {\n      newState[track] = newState[track] || 0;\n      newState[track] -= 1;\n\n      if (newState[track] <= 0) {\n        delete newState[track];\n      }\n    });\n\n    return newState;\n  } else if (action.type === DELETE_ALL_ROULETTE_SET) {\n    return {};\n  }\n\n  return state;\n}\n\nexport default combineReducers({\n  rouletteSet,\n});\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducer\";\n\nexport default createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'typeface-noto-sans-kr';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from \"react-redux\";\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}